{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x625c95A763F900f3d60fdCEC01A4474B985bAb45",
      "txHash": "0x82d044f2d860882f6078b6726a8dffdfc9b0b2a2c4ce657ad4861683403f67d9",
      "kind": "uups"
    },
    {
      "address": "0xeca4C17Efced3359D6F112742FF92e79A4D7b439",
      "txHash": "0xd3134259e616595e190ee7d65d6709f7c7072c4ffa7a3581fe73287b5901a393",
      "kind": "uups"
    },
    {
      "address": "0xec8b6066b99D4ED3dF0626bab463264354274b49",
      "txHash": "0x9ffe1f902dabc0837529be8b1e5456c5a0d72db5f53b44622a28411e7e54f3a0",
      "kind": "uups"
    },
    {
      "address": "0x4879570a9268a94BCcb8731ecb95E39bdb5EBC0C",
      "txHash": "0x29681dc2a8e8c775e6bb9b226f51dbf0db046ac0459389556212fda4c48e61db",
      "kind": "transparent"
    },
    {
      "address": "0xa0DA23b54D9D435acD1c7dD01E36CA2f1eAc4F8A",
      "txHash": "0xb44e7fffbf4665c343db61850463fc234bbf1a6f0c2077a1d3caf7bd158edbd1",
      "kind": "transparent"
    },
    {
      "address": "0xC3b8B00a45F66821b885a1372434D1072D6b6B77",
      "txHash": "0x4e590cd9e600363d04ee6ee8ffafd54927096b493ff3336798c83e26835f62eb",
      "kind": "uups"
    }
  ],
  "impls": {
    "4ff630b4288697e837cd8df9062152fcad9f123864f3a75e4af496ced6d90e8b": {
      "address": "0x78E2514CD81aB1891B38c0Bb7ebd83E646Af5629",
      "txHash": "0x66229dee94253f58184b93a53a1db591fba0cb394b2474795da3266a9d1e702f",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "certificates",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(Certificate)21731_storage)",
            "contract": "SolidaryTrustManager",
            "src": "contracts/governance_consensus/SolidaryTrustManager.sol:35"
          },
          {
            "label": "policies",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(Policy)21738_storage)",
            "contract": "SolidaryTrustManager",
            "src": "contracts/governance_consensus/SolidaryTrustManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)239_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)167_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Certificate)21731_storage)": {
            "label": "mapping(address => struct SolidaryTrustManager.Certificate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Policy)21738_storage)": {
            "label": "mapping(bytes32 => struct SolidaryTrustManager.Policy)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Certificate)21731_storage": {
            "label": "struct SolidaryTrustManager.Certificate",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "module",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "issuedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "validUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "revoked",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Policy)21738_storage": {
            "label": "struct SolidaryTrustManager.Policy",
            "members": [
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "941c3bae3b1995357193a641dc21aa5bdd55380e54f4d889b49c5c1a2e7880e8": {
      "address": "0x3Ce6ae0c70c1e0Ba81924580DaC57a0E8eA21F5F",
      "txHash": "0x087e261fad55b5708ae125447c7cf617fd9d44e338b703135572ba8bcdaacdc1",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "globalSuccessThreshold",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:89"
          },
          {
            "label": "creatorWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:91"
          },
          {
            "label": "solidaryWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:91"
          },
          {
            "label": "totalRaisedThisPlanet",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:92"
          },
          {
            "label": "totalRaisedEcosystem",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:93"
          },
          {
            "label": "refundDeadline",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:93"
          },
          {
            "label": "contributions",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:93"
          },
          {
            "label": "refundProcessed",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:96"
          },
          {
            "label": "refundState",
            "offset": 0,
            "slot": "8",
            "type": "t_enum(RefundState)1660",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)266_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(RefundState)1660": {
            "label": "enum RefundManager.RefundState",
            "members": [
              "ACTIVE",
              "SUCCESS_CONFIRMED",
              "REFUND_AVAILABLE",
              "REFUND_EXPIRED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f13b1e0e44c05809e69720770728dd1ffda5aa111d746cabfbd1be2426d76a75": {
      "address": "0xca0ACEdf6A0C7ced610100483e83Ba82E395DCbd",
      "txHash": "0xeca7d4491f97806fe15ac36a3ba5c630345488bb268fe8734cc6c479fc6dea49",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "globalSuccessThreshold",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:89"
          },
          {
            "label": "creatorWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:91"
          },
          {
            "label": "solidaryWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:91"
          },
          {
            "label": "totalRaisedThisPlanet",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:92"
          },
          {
            "label": "totalRaisedEcosystem",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:93"
          },
          {
            "label": "refundDeadline",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:93"
          },
          {
            "label": "contributions",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:93"
          },
          {
            "label": "refundProcessed",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:96"
          },
          {
            "label": "refundState",
            "offset": 0,
            "slot": "8",
            "type": "t_enum(RefundState)7951",
            "contract": "RefundManager",
            "src": "contracts/core_justice/RefundManager.sol:101"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "SolidaryComix_StellaDoppia",
            "src": "contracts/creative_cultural/SolidaryComix.sol:27"
          },
          {
            "label": "charityWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "SolidaryComix_StellaDoppia",
            "src": "contracts/creative_cultural/SolidaryComix.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)273_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ERC1155SupplyStorage)547_storage": {
            "label": "struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage",
            "members": [
              {
                "label": "_totalSupply",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupplyAll",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)649_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(RefundState)7951": {
            "label": "enum RefundManager.RefundState",
            "members": [
              "ACTIVE",
              "SUCCESS_CONFIRMED",
              "REFUND_AVAILABLE",
              "REFUND_EXPIRED"
            ],
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155Supply": [
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:28",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupplyAll",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fe5efba8778278050b534935990ef8296646db983708e84773541f65b96c3525": {
      "address": "0xaDcfd61E582573Ccee77003796d20AB1d964649A",
      "txHash": "0xc457c3fab6a87b32ca429eedbfe64df0e7d018bf4b8d59b88059ff9d0f37fb68",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)797_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)239_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)167_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6a2402d05361c04d778ff5cd0aa2820558674feecb16548073a7db4c78241e30": {
      "address": "0x2B7a7f7982c733C64E039e00c279B4a5cB5b78dF",
      "txHash": "0x83ad1240666e901060b30c1901dc4892aabac0c2d3df744ec750ceb91b90903d",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "LuccaComixNFT",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixNFT.sol:12"
          },
          {
            "label": "charities",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Charity)18214_storage)dyn_storage",
            "contract": "LuccaComixNFT",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixNFT.sol:23"
          },
          {
            "label": "hasVotedForCharity",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LuccaComixNFT",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixNFT.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)1026_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)239_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)167_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Charity)18214_storage)dyn_storage": {
            "label": "struct LuccaComixNFT.Charity[]",
            "numberOfBytes": "32"
          },
          "t_struct(Charity)18214_storage": {
            "label": "struct LuccaComixNFT.Charity",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "346bd7bdac34388f9af411cd05533f9b456f9f42700003c7348cde3d467f2038": {
      "address": "0x730A49e467C11Df6514c4f0253ea2462d428d91C",
      "txHash": "0xf66f4c9f9cded303df4bc05378412f12881dede4577399bae0b99766a52a6c26",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "tokenAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:13"
          },
          {
            "label": "nftAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:14"
          },
          {
            "label": "charities",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Charity)18399_storage)dyn_storage",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:25"
          },
          {
            "label": "hasVotedForCharity",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:26"
          },
          {
            "label": "hourlyParticipants",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)239_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)167_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Charity)18399_storage)dyn_storage": {
            "label": "struct LuccaComixSolidary.Charity[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Charity)18399_storage": {
            "label": "struct LuccaComixSolidary.Charity",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5c73c4ad6bbf36348a04c2a569ca4e5d0f93c04a2ababa3d52cd2e3d719bf0c0": {
      "address": "0xe683E587Edd5691448eE931CA91998fd33D631F6",
      "txHash": "0x571e80e02ec9437dc18237881e5a5912553b4ecb5e2a2b112af9f4cb972ee6b5",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "tokenAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:13"
          },
          {
            "label": "nftAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:14"
          },
          {
            "label": "charities",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Charity)1457_storage)dyn_storage",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:25"
          },
          {
            "label": "hasVotedForCharity",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:26"
          },
          {
            "label": "hourlyParticipants",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "LuccaComixSolidary",
            "src": "contracts/creative_cultural/lucca_comics_2025/LuccaComixSolidary.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Charity)1457_storage)dyn_storage": {
            "label": "struct LuccaComixSolidary.Charity[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Charity)1457_storage": {
            "label": "struct LuccaComixSolidary.Charity",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
